RemoteConf {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2552
      }
    }
  }
}

LocalConf {
  my-dispatcher {
    mailbox-type = com.ligx.mailbox.CustomMailType
  }

  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
  }
}

kafka.consumer {
  zookeeper.connect = "localhost:2181"
  group.id = "akka-group"
  zookeeper.session.timeout.ms = "5000"    // ZooKeeper session timeout. If the consumer fails to heartbeat to ZooKeeper for this period of time it is considered dead and a rebalance will occur.
  zookeeper.sync.time.ms = "1000"   // How far a ZK follower can be behind a ZK leader
  zookeeper.connection.timeout.ms = "10000"
  auto.commit.interval.ms = "10000"
  auto.commit.enable = "false"
  auto.offset.reset = "largest"
  consumer.timeout.ms = "400"  // Throw a timeout exception to the consumer if no message is available for consumption after the specified interval (default = -1 - blocking)
}

kafka.producer {
  bootstrap.servers = ""
  buffer.memory = "10*1024*1024"  // default=33554432
  retries = "2"                   // default=0
  acks = "1"                      // default=1
  compression.type = "gzip"       // default=none (none / gzip / snappy)
  batch.size = "16384"            // default=16384
  metadata.fetch.timeout.ms = "1000"
  block.on.buffer.full = "false"
  request.timeout.ms = "10000"
}

